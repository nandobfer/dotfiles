generator client {
    provider = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int         @id @default(autoincrement())
    username    String      @unique
    email       String      @unique
    document    String      @unique
    password    String
    name        String

    adm         Boolean     @default(false)
    producer    Boolean     @default(false)
    agent       Boolean     @default(false)
    shipping    Boolean     @default(false)
    sold        Int         @default(0)
    bought      Int         @default(0)
    rating      Float       @default(5)
    date        DateTime    @default(now())

    crops       Crop[]
    mediatedCrops MediatedCrop[]
    chats       Chat[]
    messages    Message[]

    business    Business?
}

model Business {
    id          Int         @id @default(autoincrement())
    name        String
    document    String
    phone       String
    email       String
    image       String?     @db.Text

    date        DateTime    @default(now())

    store       Boolean
    service     Boolean

    user        User        @relation(fields: [userId], references: [id])
    userId      Int         @unique
}

model Crop {
    id          Int         @id @default(autoincrement())
    name        String
    description String      @db.Text
    weight      Float
    price       Float
    image       String      @db.Text @default("")
    gallery     String      @db.Text @default("")

    producer    User        @relation(fields: [producerId], references: [id])
    producerId  Int
    mediated    MediatedCrop?

    rating      Float       @default(5)   
    date        DateTime    @default(now())
    sold        Int         @default(0)

    categories  Category[]

}

model MediatedCrop {
    id          Int         @id @default(autoincrement())
    crop        Crop        @relation(fields: [cropId], references: [id])
    cropId      Int         @unique

    agent       User        @relation(fields: [agentId], references: [id])
    agentId     Int

}

model Message {
    id          Int         @id @default(autoincrement())
    text        String      @db.Text

    user        User        @relation(fields: [userId], references: [id])
    userId      Int
    chat        Chat        @relation(fields: [chatId], references: [id])
    chatId      Int
}

model Chat {
    id          Int         @id @default(autoincrement())
    channel     String
    messages    Message[]
    users       User[]      
}

model Category {
    id          Int         @id @default(autoincrement())
    name        String
    crops       Crop[]
}